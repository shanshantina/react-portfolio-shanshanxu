{"version":3,"sources":["components/Navigation/index.js","components/Header/index.js","components/About/index.js","components/Project/index.js","components/Contact/index.js","utils/helpers.js","components/Resume/index.js","components/Footer/index.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["Navigation","props","aboutmeSelected","setAboutmeSelected","projectSelected","setProjectSelected","contactSelected","setContactSelected","resumeSelected","setResumeSelected","className","onClick","Header","style","backgroundImage","process","About","styles","zoomIn","animation","animationName","Radium","keyframes","src","width","alt","Project","name","deployed","github","map","project","i","href","target","rel","Contact","useState","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","e","isValid","test","String","toLowerCase","validateEmail","value","length","string","charAt","toUpperCase","slice","id","onSubmit","preventDefault","console","log","htmlFor","type","defaultValue","onBlur","rows","Resume","download","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.ae82fd28.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Navigation(props) {\r\n  const {\r\n    aboutmeSelected,\r\n    setAboutmeSelected,\r\n    projectSelected,\r\n    setProjectSelected,\r\n    contactSelected,\r\n    setContactSelected,\r\n    resumeSelected,\r\n    setResumeSelected,\r\n  } = props;\r\n\r\n  return (\r\n    <nav className=\"row align-self-end\">\r\n      <ul className=\"flex-row\">\r\n        <li className={`${aboutmeSelected && \"navActive\"}`}>\r\n          <span\r\n            onClick={() => {\r\n              setAboutmeSelected(true);\r\n              setProjectSelected(false);\r\n              setContactSelected(false);\r\n              setResumeSelected(false);\r\n            }}\r\n          >\r\n            About Me\r\n          </span>\r\n        </li>\r\n        <li className={`${projectSelected && \"navActive\"}`}>\r\n          <span\r\n            onClick={() => {\r\n              setProjectSelected(true);\r\n              setContactSelected(false);\r\n              setResumeSelected(false);\r\n              setAboutmeSelected(false);\r\n            }}\r\n          >\r\n            Portfolio\r\n          </span>\r\n        </li>\r\n        <li className={`${contactSelected && \"navActive\"}`}>\r\n          <span\r\n            onClick={() => {\r\n              setContactSelected(true);\r\n              setProjectSelected(false);\r\n              setResumeSelected(false);\r\n              setAboutmeSelected(false);\r\n            }}\r\n          >\r\n            Contact\r\n          </span>\r\n        </li>\r\n        <li className={`${resumeSelected && \"navActive\"}`}>\r\n          <span\r\n            onClick={() => {\r\n              setResumeSelected(true);\r\n              setProjectSelected(false);\r\n              setContactSelected(false);\r\n              setAboutmeSelected(false);\r\n            }}\r\n          >\r\n            Resume\r\n          </span>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport Navigation from \"../Navigation\";\r\n\r\nfunction Header(props) {\r\n  const {\r\n    aboutmeSelected,\r\n    setAboutmeSelected,\r\n    projectSelected,\r\n    setProjectSelected,\r\n    contactSelected,\r\n    setContactSelected,\r\n    resumeSelected,\r\n    setResumeSelected,\r\n  } = props;\r\n\r\n  return (\r\n    <header\r\n      className=\"row justify-content-around align-items-center heading\"\r\n      style={{\r\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/assets/pic/autumn.png\"})`,\r\n      }}\r\n    >\r\n      <h1>Shanshan Xu</h1>\r\n\r\n      <Navigation\r\n        aboutmeSelected={aboutmeSelected}\r\n        setAboutmeSelected={setAboutmeSelected}\r\n        projectSelected={projectSelected}\r\n        setProjectSelected={setProjectSelected}\r\n        contactSelected={contactSelected}\r\n        setContactSelected={setContactSelected}\r\n        resumeSelected={resumeSelected}\r\n        setResumeSelected={setResumeSelected}\r\n      />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { zoomIn } from \"react-animations\";\r\nimport Radium, { StyleRoot } from \"radium\";\r\n\r\nfunction About() {\r\n  const styles = {\r\n    zoomIn: {\r\n      animation: \"x 1s\",\r\n      animationName: Radium.keyframes(zoomIn, \"zoomIn\"),\r\n    },\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <StyleRoot>\r\n        <h1 style={styles.zoomIn}>\r\n          About Me\r\n        </h1>\r\n      </StyleRoot>\r\n      <div className=\"row justify-content-around\">\r\n        <div className=\"col-3 row align-items-center\">\r\n          <img\r\n            src={process.env.PUBLIC_URL + \"/assets/pic/self.png\"}\r\n            style={{ width: \"100%\" }}\r\n            alt=\"myself which wear a glasses with smile on the face.\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-8 row align-items-center\">\r\n          <p>\r\n            Currently focus on Coding Bootcamp program at UofT SCS to prepare to\r\n            be a web developer. <br></br>\r\n            In the previous job, Expert in Reconciliation and Exception\r\n            processing. Strong accounting skills, with demonstrated expertise in\r\n            General Ledger and DDA reconciliation. Team leadership, most\r\n            recently leading 10 direct reports, providing coaching and support\r\n            for team growth and development. Review and analysis of Exception\r\n            processing, creating and implementing streamlined workflows to\r\n            leverage automation, elimination redundancy, and provide more\r\n            efficient and effective end-to-end processing. Delivering superior\r\n            customer service and partner support while adhering to Service Level\r\n            Agreements and rules and regulations outlined by Payments Canada.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { zoomIn } from \"react-animations\";\r\nimport Radium, { StyleRoot } from \"radium\";\r\n\r\nfunction Project() {\r\n  const projects = [\r\n    {\r\n      name: \"Tech Blog\",\r\n      alt: \"This is a tech blog and require to login.\",\r\n      deployed: \"https://tech-blog-shanshanxu.herokuapp.com/\",\r\n      github: \"https://github.com/shanshantina/tech-blog\",\r\n    },\r\n    {\r\n      name: \"Weather Dashboard\",\r\n      alt:\r\n        \"Weather Dashboard website with city weather information shows on the main page.\",\r\n      deployed: \"https://shanshantina.github.io/weather-dashboard/\",\r\n      github: \"https://github.com/shanshantina/weather-dashboard\",\r\n    },\r\n    {\r\n      name: \"Note Taker\",\r\n      alt: \"Note taker page with a 'get start' button to start to take notes.\",\r\n      deployed: \"https://note-taker-shanshanxu.herokuapp.com/\",\r\n      github: \"https://github.com/shanshantina/note-taker\",\r\n    },\r\n    {\r\n      name: \"Code Quiz\",\r\n      alt:\r\n        \"Coding Quiz game with light green start button in the middle of the page.\",\r\n      deployed: \"https://shanshantina.github.io/code-quiz/\",\r\n      github: \"https://github.com/shanshantina/code-quiz\",\r\n    },\r\n    {\r\n      name: \"Online Barkeep\",\r\n      alt:\r\n        \"Signed up form for cocktail ingredients with cocktail neon sign at background.\",\r\n      deployed: \"https://uoft-project1-group5.github.io/cocktail-map/\",\r\n      github: \"https://github.com/uoft-project1-group5/cocktail-map\",\r\n    },\r\n    {\r\n      name: \"Simply Unused\",\r\n      alt: \"Signed up page with three introduction cards of using this site.\",\r\n      deployed: \"https://project2-simply-unused.herokuapp.com/\",\r\n      github: \"https://github.com/Bootcamp-Group5/simply-unused\",\r\n    },\r\n  ];\r\n\r\n  const styles = {\r\n    zoomIn: {\r\n      animation: \"x 1s\",\r\n      animationName: Radium.keyframes(zoomIn, \"zoomIn\"),\r\n    },\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <StyleRoot>\r\n        <h1 style={styles.zoomIn}>Portfolio</h1>\r\n      </StyleRoot>\r\n\r\n      <div className=\"row justify-content-center align-items-center project-row\">\r\n        {projects.map((project, i) => (\r\n          <div className=\"card\" key={project.name}>\r\n            <img\r\n              src={process.env.PUBLIC_URL + `/assets/project/${i}.JPG`}\r\n              className=\"card-img\"\r\n              alt={project.alt}\r\n            ></img>\r\n\r\n            <div className=\"card-img-overlay row align-items-center justify-content-center\">\r\n              <a\r\n                className=\"card-title\"\r\n                href={project.deployed}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                {project.name}\r\n              </a>\r\n              <a\r\n                className=\"card-text\"\r\n                href={project.github}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                <i className=\"fab fa-github\"></i>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Project;\r\n","import React, { useState } from \"react\";\r\nimport { zoomIn } from \"react-animations\";\r\nimport Radium, { StyleRoot } from \"radium\";\r\nimport { validateEmail } from \"../../utils/helpers\";\r\nimport { capitalizeFirstLetter } from \"../../utils/helpers\";\r\n\r\nfunction Contact() {\r\n  const [formState, setFormState] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const styles = {\r\n    zoomIn: {\r\n      animation: \"x 1s\",\r\n      animationName: Radium.keyframes(zoomIn, \"zoomIn\"),\r\n    },\r\n  };\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const { name, email, message } = formState;\r\n\r\n  function handleChange(e) {\r\n    if (e.target.name === \"email\") {\r\n      const isValid = validateEmail(e.target.value);\r\n      if (!isValid) {\r\n        setErrorMessage(\"Your email is invalid.\");\r\n      } else {\r\n        setErrorMessage(\"\");\r\n      }\r\n    } else {\r\n      if (!e.target.value.length) {\r\n        setErrorMessage(`${capitalizeFirstLetter(e.target.name)} is required.`);\r\n      } else {\r\n        setErrorMessage(\"\");\r\n      }\r\n    }\r\n\r\n    if (!errorMessage) {\r\n      setFormState({ ...formState, [e.target.name]: e.target.value });\r\n    }\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(formState);\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <StyleRoot>\r\n        <h1 style={styles.zoomIn}>Contact Me</h1>\r\n      </StyleRoot>\r\n\r\n      <div className=\"row justify-content-center\">\r\n        <form id=\"contact-form\" onSubmit={handleSubmit} className=\"col-6\">\r\n          <div>\r\n            <label htmlFor=\"name\">Name:</label>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                defaultValue={name}\r\n                onBlur={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"email\">Email Address:</label>\r\n            <div>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                defaultValue={email}\r\n                onBlur={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"message\">Message:</label>\r\n            <div>\r\n              <textarea\r\n                name=\"message\"\r\n                defaultValue={message}\r\n                rows=\"5\"\r\n                onBlur={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          {errorMessage && (\r\n            <div>\r\n              <p className=\"error-text\">{errorMessage}</p>\r\n            </div>\r\n          )}\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n\r\n        <div className=\"col-4\">\r\n        <img\r\n            src={process.env.PUBLIC_URL + \"/assets/pic/coffee.png\"}\r\n            style={{ width: \"100%\" }}\r\n            alt=\"Network people with different tools\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","export function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function validateEmail(email) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}","import React from \"react\";\r\nimport { zoomIn } from \"react-animations\";\r\nimport Radium, { StyleRoot } from \"radium\";\r\n\r\nfunction Resume() {\r\n  const styles = {\r\n    zoomIn: {\r\n      animation: \"x 1s\",\r\n      animationName: Radium.keyframes(zoomIn, \"zoomIn\"),\r\n    },\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <StyleRoot>\r\n        <h1 style={styles.zoomIn}>Resume</h1>\r\n      </StyleRoot>\r\n\r\n      <h3>\r\n        Download my{\" \"}\r\n        <a\r\n          className=\"resume\"\r\n          href={\r\n            process.env.PUBLIC_URL + \"/assets/document/resume-shanshanxu.pdf\"\r\n          } download\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          Resume\r\n        </a>\r\n      </h3>\r\n      <div className=\"row justify-content-around align-items-center\">\r\n        <div className=\"col-5\">\r\n          <h2>Front-end Proficiencies</h2>\r\n          <ul className=\"skill\">\r\n            <li>HTML</li>\r\n            <li>CSS</li>\r\n            <li>JavaScript</li>\r\n            <li>jQuery</li>\r\n            <li>React</li>\r\n            <li>Bootstrap</li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"col-5\">\r\n          <h2>Back-end Proficiencies</h2>\r\n          <ul className=\"skill\">\r\n            <li>APIs</li>\r\n            <li>Node</li>\r\n            <li>Express</li>\r\n            <li>MySQL, Sequelize</li>\r\n            <li>MongoDB, Mongoose</li>\r\n            <li>REST</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Resume;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <section className=\"footer\">\r\n      <a\r\n        href=\"https://github.com/Shanshantina\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        <i className=\"fab fa-github\"></i>\r\n      </a>\r\n      <a\r\n        href=\"https://www.linkedin.com/in/shanshan-xu-b404931bb/\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        <i className=\"fab fa-linkedin\"></i>\r\n      </a>\r\n      <a\r\n        href=\"https://stackoverflow.com/users/14614460/shanshan-xu?tab=profile\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        <i className=\"fab fa-stack-overflow\"></i>\r\n      </a>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport About from \"./components/About\";\nimport Project from \"./components/Project\";\nimport Contact from \"./components/Contact\";\nimport Resume from \"./components/Resume\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  const [aboutmeSelected, setAboutmeSelected] = useState(true);\n  const [projectSelected, setProjectSelected] = useState(false);\n  const [contactSelected, setContactSelected] = useState(false);\n  const [resumeSelected, setResumeSelected] = useState(false);\n\n  return (\n    <div>\n      <Header\n        aboutmeSelected={aboutmeSelected}\n        setAboutmeSelected={setAboutmeSelected}\n        projectSelected={projectSelected}\n        setProjectSelected={setProjectSelected}\n        contactSelected={contactSelected}\n        setContactSelected={setContactSelected}\n        resumeSelected={resumeSelected}\n        setResumeSelected={setResumeSelected}\n      ></Header>\n\n      <main>\n        {projectSelected ? (\n          <Project></Project>\n        ) : contactSelected ? (\n          <Contact></Contact>\n        ) : resumeSelected ? (\n          <Resume></Resume>\n        ) : (\n          <About></About>\n        )}\n      </main>\n\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}